# This is the CMakeCache file.
# For build in directory: /Users/dojo/Downloads/libunwind-4.0.0.src/build
# It was generated by CMake: /usr/local/Cellar/cmake/3.8.2/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Path to a program.
CMAKE_AR:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ar

//Choose the type of build, options are: None(CMAKE_CXX_FLAGS or
// CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.
CMAKE_BUILD_TYPE:STRING=

//Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

//CXX compiler
CMAKE_CXX_COMPILER:FILEPATH=/Applications/Xcode.app/Contents/Developer/usr/bin/g++

//First argument to CXX compiler
CMAKE_CXX_COMPILER_ARG1:STRING= -Ofast -fomit-frame-pointer -ffast-math -fno-signed-zeros -m64 -m32 -mmmx -msse  -funroll-loops

//Flags used by the compiler during all build types.
CMAKE_CXX_FLAGS:STRING=

//Flags used by the compiler during debug builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//C compiler
CMAKE_C_COMPILER:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc

//First argument to C compiler
CMAKE_C_COMPILER_ARG1:STRING= -Ofast -fomit-frame-pointer -ffast-math -fno-signed-zeros -m64 -m32 -mmmx -msse  -funroll-loops

//Flags used by the compiler during all build types.
CMAKE_C_FLAGS:STRING=-Ofast -fomit-frame-pointer -ffast-math -fno-signed-zeros -m64 -m32 -mmmx -msse  -funroll-loops

//Flags used by the compiler during debug builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Flags used by the linker.
CMAKE_EXE_LINKER_FLAGS:STRING=-L/usr/local/opt/openblas/lib -L/usr/local/opt/qt/lib -L/usr/local/opt/icu4c/lib -L/usr/local/opt/bison/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/gettext/lib -L/usr/local/opt/libxml2/lib -L/usr/local/opt/libpng/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib

//Flags used by the linker during debug builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=OFF

//Path to a program.
CMAKE_INSTALL_NAME_TOOL:FILEPATH=/usr/bin/install_name_tool

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local/Cellar/llvm/4.0.0_1/lib

//Path to a program.
CMAKE_LINKER:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld

//Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/local/opt/make/bin/gmake

//Flags used by the linker during the creation of modules.
CMAKE_MODULE_LINKER_FLAGS:STRING=-L/usr/local/opt/openblas/lib -L/usr/local/opt/qt/lib -L/usr/local/opt/icu4c/lib -L/usr/local/opt/bison/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/gettext/lib -L/usr/local/opt/libxml2/lib -L/usr/local/opt/libpng/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib

//Flags used by the linker during debug builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=CMAKE_OBJCOPY-NOTFOUND

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/objdump

//Build architectures for OSX
CMAKE_OSX_ARCHITECTURES:STRING=i386;x86_64

//Minimum OS X version to target for deployment (at runtime); newer
// APIs weak linked. Set to empty string for default value.
CMAKE_OSX_DEPLOYMENT_TARGET:STRING=

//The product will be built against the headers and libraries located
// inside the indicated SDK.
CMAKE_OSX_SYSROOT:STRING=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=libunwind

//Path to a program.
CMAKE_RANLIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib

//Flags used by the linker during the creation of dll's.
CMAKE_SHARED_LINKER_FLAGS:STRING=-L/usr/local/opt/openblas/lib -L/usr/local/opt/qt/lib -L/usr/local/opt/icu4c/lib -L/usr/local/opt/bison/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/gettext/lib -L/usr/local/opt/libxml2/lib -L/usr/local/opt/libpng/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib

//Flags used by the linker during debug builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/strip

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Build 32 bit libunwind
LIBUNWIND_BUILD_32_BITS:BOOL=OFF

//Enable unwinding support for ARM WMMX registers.
LIBUNWIND_ENABLE_ARM_WMMX:BOOL=OFF

//Enable assertions independent of build mode.
LIBUNWIND_ENABLE_ASSERTIONS:BOOL=ON

//Enable cross-platform unwinding support.
LIBUNWIND_ENABLE_CROSS_UNWINDING:BOOL=OFF

//Compile with pedantic enabled.
LIBUNWIND_ENABLE_PEDANTIC:BOOL=ON

//Build libunwind as a shared library.
LIBUNWIND_ENABLE_SHARED:BOOL=ON

//Build libunwind as a static library.
LIBUNWIND_ENABLE_STATIC:BOOL=ON

//Build libunwind with threading support.
LIBUNWIND_ENABLE_THREADS:BOOL=ON

//Fail and stop if a warning is triggered.
LIBUNWIND_ENABLE_WERROR:BOOL=OFF

//GCC toolchain for cross compiling.
LIBUNWIND_GCC_TOOLCHAIN:PATH=

//Sysroot for cross compiling.
LIBUNWIND_SYSROOT:PATH=

//Target triple for cross compiling.
LIBUNWIND_TARGET_TRIPLE:STRING=

//Path to LLVM build tree
LLVM_BINARY_DIR:PATH=/usr/local

//Build LLVM and tools with PGO instrumentation (experimental)
LLVM_BUILD_INSTRUMENTED:BOOL=OFF

//Build LLVM and tools with Code Coverage instrumentation (experimental)
LLVM_BUILD_INSTRUMENTED_COVERAGE:BOOL=OFF

//Path to a program.
LLVM_CONFIG_PATH:FILEPATH=/usr/local/bin/llvm-config

//Enable Exception handling
LLVM_ENABLE_EH:BOOL=OFF

//Build LLVM with LTO. May be specified as Thin or Full to use
// a particular kind of LTO
LLVM_ENABLE_LTO:STRING=OFF

//Enable run time type information
LLVM_ENABLE_RTTI:BOOL=OFF

//Export symbols from LLVM tools so that plugins can import them
LLVM_EXPORT_SYMBOLS_FOR_PLUGINS:BOOL=OFF

//Path to llvm/include
LLVM_INCLUDE_DIR:PATH=/usr/local/include

//Path to lit.py
LLVM_LIT:FILEPATH=LLVM_LIT-NOTFOUND

//Path to LLVM source tree
LLVM_MAIN_SRC_DIR:PATH=/Users/dojo/llvm/llvm

//Define the maximum number of concurrent compilation jobs.
LLVM_PARALLEL_COMPILE_JOBS:STRING=

//Define the maximum number of concurrent link jobs.
LLVM_PARALLEL_LINK_JOBS:STRING=

//Value Computed by CMake
libunwind_BINARY_DIR:STATIC=/Users/dojo/Downloads/libunwind-4.0.0.src/build

//Value Computed by CMake
libunwind_SOURCE_DIR:STATIC=/Users/dojo/Downloads/libunwind-4.0.0.src

//Dependencies for the target
unwind_shared_LIB_DEPENDS:STATIC=general;c;general;dl;general;pthread;

//Dependencies for the target
unwind_static_LIB_DEPENDS:STATIC=general;c;general;dl;general;pthread;


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/Users/dojo/Downloads/libunwind-4.0.0.src/build
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=8
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=2
//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/usr/local/Cellar/cmake/3.8.2/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/usr/local/Cellar/cmake/3.8.2/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/usr/local/Cellar/cmake/3.8.2/bin/ctest
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to cache edit program executable.
CMAKE_EDIT_COMMAND:INTERNAL=/usr/local/Cellar/cmake/3.8.2/bin/ccmake
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Unix Makefiles
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/Users/dojo/Downloads/libunwind-4.0.0.src
//ADVANCED property for variable: CMAKE_INSTALL_NAME_TOOL
CMAKE_INSTALL_NAME_TOOL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=2
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/usr/local/Cellar/cmake/3.8.2/share/cmake
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/usr/local/opt/coreutils/libexec/gnubin/uname
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Test CXX_SUPPORTS_CXX11
CXX_SUPPORTS_CXX11:INTERNAL=1
//Test CXX_SUPPORTS_WERROR_DATE_TIME
CXX_SUPPORTS_WERROR_DATE_TIME:INTERNAL=1
//Test C_SUPPORTS_WERROR_DATE_TIME
C_SUPPORTS_WERROR_DATE_TIME:INTERNAL=1
//Have library c
LIBUNWIND_HAS_C_LIB:INTERNAL=1
//Have library dl
LIBUNWIND_HAS_DL_LIB:INTERNAL=1
//Test LIBUNWIND_HAS_EHSC_FLAG
LIBUNWIND_HAS_EHSC_FLAG:INTERNAL=
//Test LIBUNWIND_HAS_FPIC_FLAG
LIBUNWIND_HAS_FPIC_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_FSTRICT_ALIASING_FLAG
LIBUNWIND_HAS_FSTRICT_ALIASING_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_FUNWIND_TABLES
LIBUNWIND_HAS_FUNWIND_TABLES:INTERNAL=1
//Test LIBUNWIND_HAS_NODEFAULTLIBS_FLAG
LIBUNWIND_HAS_NODEFAULTLIBS_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_NOSTDINCXX_FLAG
LIBUNWIND_HAS_NOSTDINCXX_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_NO_EHA_FLAG
LIBUNWIND_HAS_NO_EHA_FLAG:INTERNAL=
//Test LIBUNWIND_HAS_NO_EHS_FLAG
LIBUNWIND_HAS_NO_EHS_FLAG:INTERNAL=
//Test LIBUNWIND_HAS_NO_EXCEPTIONS_FLAG
LIBUNWIND_HAS_NO_EXCEPTIONS_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_NO_GR_FLAG
LIBUNWIND_HAS_NO_GR_FLAG:INTERNAL=
//Test LIBUNWIND_HAS_NO_RTTI_FLAG
LIBUNWIND_HAS_NO_RTTI_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_NO_WX_FLAG
LIBUNWIND_HAS_NO_WX_FLAG:INTERNAL=
//Test LIBUNWIND_HAS_PEDANTIC_FLAG
LIBUNWIND_HAS_PEDANTIC_FLAG:INTERNAL=1
//Have library pthread
LIBUNWIND_HAS_PTHREAD_LIB:INTERNAL=1
//Test LIBUNWIND_HAS_STD_CXX11
LIBUNWIND_HAS_STD_CXX11:INTERNAL=1
//Test LIBUNWIND_HAS_WALL_FLAG
LIBUNWIND_HAS_WALL_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WCHAR_SUBSCRIPTS_FLAG
LIBUNWIND_HAS_WCHAR_SUBSCRIPTS_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WCONVERSION_FLAG
LIBUNWIND_HAS_WCONVERSION_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WERROR_FLAG
LIBUNWIND_HAS_WERROR_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WMISMATCHED_TAGS_FLAG
LIBUNWIND_HAS_WMISMATCHED_TAGS_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WMISSING_BRACES_FLAG
LIBUNWIND_HAS_WMISSING_BRACES_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WNEWLINE_EOF_FLAG
LIBUNWIND_HAS_WNEWLINE_EOF_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WNO_ERROR_FLAG
LIBUNWIND_HAS_WNO_ERROR_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WNO_UNUSED_FUNCTION_FLAG
LIBUNWIND_HAS_WNO_UNUSED_FUNCTION_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WSHADOW_FLAG
LIBUNWIND_HAS_WSHADOW_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WSHORTEN_64_TO_32_FLAG
LIBUNWIND_HAS_WSHORTEN_64_TO_32_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WSIGN_COMPARE_FLAG
LIBUNWIND_HAS_WSIGN_COMPARE_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WSIGN_CONVERSION_FLAG
LIBUNWIND_HAS_WSIGN_CONVERSION_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WSTRICT_ALIASING_FLAG
LIBUNWIND_HAS_WSTRICT_ALIASING_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WSTRICT_OVERFLOW_FLAG
LIBUNWIND_HAS_WSTRICT_OVERFLOW_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WUNDEF_FLAG
LIBUNWIND_HAS_WUNDEF_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WUNUSED_PARAMETER_FLAG
LIBUNWIND_HAS_WUNUSED_PARAMETER_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WUNUSED_VARIABLE_FLAG
LIBUNWIND_HAS_WUNUSED_VARIABLE_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WWRITE_STRINGS_FLAG
LIBUNWIND_HAS_WWRITE_STRINGS_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WX_FLAG
LIBUNWIND_HAS_WX_FLAG:INTERNAL=
//Test LIBUNWIND_HAS_W_FLAG
LIBUNWIND_HAS_W_FLAG:INTERNAL=1
//ADVANCED property for variable: LLVM_BUILD_INSTRUMENTED
LLVM_BUILD_INSTRUMENTED-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_BUILD_INSTRUMENTED_COVERAGE
LLVM_BUILD_INSTRUMENTED_COVERAGE-ADVANCED:INTERNAL=1
//Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG
SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG:INTERNAL=1

